import * from "std/fs"

pub fun get_env_var(var: Text): Text {
    let _var = unsafe $echo "\$\{!var}"$
    if _var != "" {
        return _var
    }

    if file_exist(".env") {
        unsafe $source ".env"$
        return unsafe $echo "\$\{!var}"$
    }

    return ""
}

pub fun load_env_file(): Null {
    unsafe $export "\$(xargs < .env)" > /dev/null$
}

pub fun shell_isset(name: Text): Bool {
    $[[ ! -z \$\{!{nameof name}+z} ]]$ failed {
        return false
    }
    return true
}

pub fun shell_constant_set(name: Text, val: Text): Null {
    $readonly \${nameof name}="\${nameof val}" 2> /dev/null$?
}

pub fun shell_constant_get(name: Text): Text {
    return $echo \$\{!{nameof name}}$?
}

pub fun shell_var_set(name: Text, val: Text): Null {
    $export \${nameof name}="\${nameof val}" 2> /dev/null$?
}

pub fun shell_var_get(name: Text): Text {
    return $echo \$\{!{nameof name}}$?
}

pub fun shell_unset(name: Text): Null {
    $unset {name}$?
}

pub fun is_command(command: Text): Bool {
    $[ -x "\$(command -v {command})" ]$ failed {
        return false
    }
    return true
}

pub fun input(prompt: Text): Text {
    unsafe $printf "\${nameof prompt}"$
    unsafe $read$
    return "\$REPLY"
}

pub fun has_failed(command: Text): Bool {
    unsafe silent $eval {command}$
    return status != 0
}

pub fun exit(code: Num): Null {
    unsafe $exit "{code}"$
}

pub fun is_root(): Bool {
    if unsafe $id -u$ == "0" {
        return true
    }

    return false
}

pub fun text_shell(message: Text, color1: Num, style: Num, color2: Num): Text {
    return "\e[{style as Text};{color1 as Text};{color2 as Text}m{message}\e[0m"
}

pub fun text_bold(message: Text): Text {
    return "\e[1m{message}\e[0m"
}

pub fun text_italic(message: Text): Text {
    return "\e[3m{message}\e[0m"
}

pub fun text_underlined(message: Text): Text {
    return "\e[4m{message}\e[0m"
}

pub fun color_echo(message: Text, color: Num): Null {
    unsafe $echo -e "\e[{color as Text}m{message}\e[0m"$
}

pub fun echo_esc(message: Text): Null {
    unsafe $echo -e "{message}"$
}

pub fun print_info(message: Text): Null {
    unsafe $echo -e "\e[1;3;97;44m {message} \e[0m"$
}

pub fun print_success(message: Text): Null {
    unsafe $echo -e "\e[1;3;97;42m {message} \e[0m"$
}

pub fun print_warning(message: Text): Null {
    unsafe $echo -e "\e[1;3;97;43m {message} \e[0m"$
}

pub fun print_error(message: Text, exit_code: Num = 1): Null {
    unsafe $echo -e "\e[1;3;97;41m {message} \e[0m"$
    if exit_code >= 0 : exit(exit_code)
}